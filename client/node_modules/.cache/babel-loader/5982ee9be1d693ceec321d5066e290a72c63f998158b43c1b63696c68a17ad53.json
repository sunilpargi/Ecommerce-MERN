{"ast":null,"code":"var _jsxFileName = \"/Users/pedrotech/Documents/YoutubeProjects/ecommerce-proj/client/src/providers/shop-context.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nexport const ShopContextProvider = props => {\n  _s();\n  const [cartItems, setCartItems] = useState({});\n  const getCartItemCount = itemId => {\n    if (itemId in cartItems) {\n      return cartItems[itemId];\n    }\n    return 0;\n  };\n\n  // const getTotalCartAmount = () => {\n  //   let totalAmount = 0;\n  //   for (const item in cartItems) {\n  //     if (cartItems[item] > 0) {\n  //       let itemInfo = PRODUCTS.find((product) => product.id === Number(item));\n  //       totalAmount += cartItems[item] * itemInfo.price;\n  //     }\n  //   }\n  //   return totalAmount;\n  // };\n\n  const addToCart = itemId => {\n    if (!cartItems[itemId]) {\n      setCartItems(prev => ({\n        ...prev,\n        [itemId]: 1\n      }));\n    } else {\n      setCartItems(prev => ({\n        ...prev,\n        [itemId]: prev[itemId] + 1\n      }));\n    }\n  };\n  const removeFromCart = itemId => {\n    if (!cartItems[itemId]) return;\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n  };\n  const updateCartItemCount = (newAmount, itemId) => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: newAmount\n    }));\n  };\n  const checkout = () => {\n    // setCartItems(getDefaultCart());\n  };\n  const contextValue = {\n    getCartItemCount,\n    addToCart,\n    updateCartItemCount,\n    removeFromCart,\n    // getTotalCartAmount,\n    checkout\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ShopContextProvider, \"ZfsghUvcb47aP4k5v+9sZn9U95g=\");\n_c = ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","cartItems","setCartItems","getCartItemCount","itemId","addToCart","prev","removeFromCart","updateCartItemCount","newAmount","checkout","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pedrotech/Documents/YoutubeProjects/ecommerce-proj/client/src/providers/shop-context.tsx"],"sourcesContent":["import { ReactNode, createContext, useEffect, useState } from \"react\";\n\ninterface IShopContext {\n  getCartItemCount: (itemId: string) => number;\n  addToCart: (itemId: string) => void;\n  updateCartItemCount: (newAmount: number, itemId: string) => void;\n  removeFromCart: (itemId: string) => void;\n  checkout: () => void;\n}\n\nexport const ShopContext: IShopContext = createContext(null);\n\nexport const ShopContextProvider = (props) => {\n  const [cartItems, setCartItems] = useState({});\n\n  const getCartItemCount = (itemId: string): number => {\n    if (itemId in cartItems) {\n      return cartItems[itemId];\n    }\n\n    return 0;\n  };\n\n  // const getTotalCartAmount = () => {\n  //   let totalAmount = 0;\n  //   for (const item in cartItems) {\n  //     if (cartItems[item] > 0) {\n  //       let itemInfo = PRODUCTS.find((product) => product.id === Number(item));\n  //       totalAmount += cartItems[item] * itemInfo.price;\n  //     }\n  //   }\n  //   return totalAmount;\n  // };\n\n  const addToCart = (itemId: string) => {\n    if (!cartItems[itemId]) {\n      setCartItems((prev) => ({ ...prev, [itemId]: 1 }));\n    } else {\n      setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] + 1 }));\n    }\n  };\n\n  const removeFromCart = (itemId: string) => {\n    if (!cartItems[itemId]) return;\n    setCartItems((prev) => ({ ...prev, [itemId]: prev[itemId] - 1 }));\n  };\n\n  const updateCartItemCount = (newAmount: number, itemId: string) => {\n    setCartItems((prev) => ({ ...prev, [itemId]: newAmount }));\n  };\n\n  const checkout = () => {\n    // setCartItems(getDefaultCart());\n  };\n\n  const contextValue: IShopContext = {\n    getCartItemCount,\n    addToCart,\n    updateCartItemCount,\n    removeFromCart,\n    // getTotalCartAmount,\n    checkout,\n  };\n\n  return (\n    <ShopContext.Provider value={contextValue}>\n      {props.children}\n    </ShopContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,SAAoBA,aAAa,EAAaC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUtE,OAAO,MAAMC,WAAyB,gBAAGJ,aAAa,CAAC,IAAI,CAAC;AAE5D,OAAO,MAAMK,mBAAmB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAMS,gBAAgB,GAAIC,MAAc,IAAa;IACnD,IAAIA,MAAM,IAAIH,SAAS,EAAE;MACvB,OAAOA,SAAS,CAACG,MAAM,CAAC;IAC1B;IAEA,OAAO,CAAC;EACV,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,SAAS,GAAID,MAAc,IAAK;IACpC,IAAI,CAACH,SAAS,CAACG,MAAM,CAAC,EAAE;MACtBF,YAAY,CAAEI,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACF,MAAM,GAAG;MAAE,CAAC,CAAC,CAAC;IACpD,CAAC,MAAM;MACLF,YAAY,CAAEI,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAACF,MAAM,GAAGE,IAAI,CAACF,MAAM,CAAC,GAAG;MAAE,CAAC,CAAC,CAAC;IACnE;EACF,CAAC;EAED,MAAMG,cAAc,GAAIH,MAAc,IAAK;IACzC,IAAI,CAACH,SAAS,CAACG,MAAM,CAAC,EAAE;IACxBF,YAAY,CAAEI,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACF,MAAM,GAAGE,IAAI,CAACF,MAAM,CAAC,GAAG;IAAE,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,MAAMI,mBAAmB,GAAGA,CAACC,SAAiB,EAAEL,MAAc,KAAK;IACjEF,YAAY,CAAEI,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACF,MAAM,GAAGK;IAAU,CAAC,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;IACrB;EAAA,CACD;EAED,MAAMC,YAA0B,GAAG;IACjCR,gBAAgB;IAChBE,SAAS;IACTG,mBAAmB;IACnBD,cAAc;IACd;IACAG;EACF,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAG,QAAA,EACvCf,KAAK,CAACe;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAClB,EAAA,CAzDWF,mBAAmB;AAAAqB,EAAA,GAAnBrB,mBAAmB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}